# Generated by Django 2.0.6 on 2018-06-07 14:35

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('home', '0002_create_homepage'),
    ]

    operations = [
        migrations.CreateModel(
            name='FloodMapPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('filters', wagtail.core.fields.StreamField([('time_range_text', wagtail.core.blocks.CharBlock(classname='time range')), ('time_range_picker', wagtail.core.blocks.StructBlock([('date_from', wagtail.core.blocks.DateBlock()), ('time_from', wagtail.core.blocks.TimeBlock()), ('date_to', wagtail.core.blocks.DateBlock()), ('time_to', wagtail.core.blocks.TimeBlock())])), ('lang', wagtail.core.blocks.ChoiceBlock(choices=[('en', 'English'), ('fr', 'Français'), ('es', 'Español'), ('de', 'Deutsch')], icon='cup')), ('country', wagtail.core.blocks.ChoiceBlock(choices=[('us', 'United States'), ('pl', 'Poland'), ('sk', 'Slovakia'), ('it', 'Italy'), ('ua', 'Ukraine'), ('ru', 'Russia'), ('kz', 'Kazakhstan')], icon='cup')), ('flood_prob_threshold', wagtail.core.blocks.FloatBlock(max_value=1.0, min_value=0.0))])),
                ('histo', wagtail.core.fields.StreamField([('content', wagtail.core.blocks.StructBlock([('tweets_per_time', wagtail.core.blocks.RawHTMLBlock()), ('prob_classes_time', wagtail.core.blocks.RawHTMLBlock())]))])),
                ('graph', wagtail.core.fields.StreamField([('content', wagtail.core.blocks.StructBlock([('top_graph', wagtail.core.blocks.StructBlock([('top_score', wagtail.core.blocks.RawHTMLBlock()), ('top_users', wagtail.core.blocks.RawHTMLBlock()), ('top_locations', wagtail.core.blocks.RawHTMLBlock()), ('top_tokens', wagtail.core.blocks.RawHTMLBlock())])), ('heatmap', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(classname='heading')), ('heatmap', wagtail.core.blocks.RawHTMLBlock())]))]))])),
                ('tweets', wagtail.core.fields.StreamField([('content', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(classname='heading')), ('table', wagtail.core.blocks.RawHTMLBlock())]))])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
